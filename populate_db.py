#!/usr/bin/env python
import os
import django
from decimal import Decimal
import random
import re

# Настройка Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shop.settings')
django.setup()

from store.models import Category, Product

def create_slug(text):
    """Создает корректный slug из текста"""
    # Транслитерация кириллицы
    translit_map = {
        'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ё': 'yo',
        'ж': 'zh', 'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm',
        'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u',
        'ф': 'f', 'х': 'h', 'ц': 'ts', 'ч': 'ch', 'ш': 'sh', 'щ': 'sch',
        'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya',
        'А': 'A', 'Б': 'B', 'В': 'V', 'Г': 'G', 'Д': 'D', 'Е': 'E', 'Ё': 'YO',
        'Ж': 'ZH', 'З': 'Z', 'И': 'I', 'Й': 'Y', 'К': 'K', 'Л': 'L', 'М': 'M',
        'Н': 'N', 'О': 'O', 'П': 'P', 'Р': 'R', 'С': 'S', 'Т': 'T', 'У': 'U',
        'Ф': 'F', 'Х': 'H', 'Ц': 'TS', 'Ч': 'CH', 'Ш': 'SH', 'Щ': 'SCH',
        'Ъ': '', 'Ы': 'Y', 'Ь': '', 'Э': 'E', 'Ю': 'YU', 'Я': 'YA'
    }
    
    # Транслитерация
    for cyr, lat in translit_map.items():
        text = text.replace(cyr, lat)
    
    # Приведение к нижнему регистру
    text = text.lower()
    
    # Замена пробелов и специальных символов на дефисы
    text = re.sub(r'[^a-z0-9]+', '-', text)
    
    # Удаление начальных и конечных дефисов
    text = text.strip('-')
    
    return text

def create_categories():
    categories_data = [
        {
            'name': 'Электроника',
            'slug': 'electronics',
            'description': 'Современная электроника для дома и офиса'
        },
        {
            'name': 'Одежда',
            'slug': 'clothing',
            'description': 'Модная одежда для всех возрастов'
        },
        {
            'name': 'Книги',
            'slug': 'books',
            'description': 'Художественная и учебная литература'
        },
        {
            'name': 'Спорт',
            'slug': 'sports',
            'description': 'Спортивные товары и оборудование'
        },
        {
            'name': 'Дом и сад',
            'slug': 'home-garden',
            'description': 'Товары для дома и садоводства'
        },
        {
            'name': 'Красота',
            'slug': 'beauty',
            'description': 'Косметика и средства по уходу'
        },
        {
            'name': 'Игрушки',
            'slug': 'toys',
            'description': 'Игрушки для детей всех возрастов'
        },
        {
            'name': 'Автотовары',
            'slug': 'auto',
            'description': 'Товары для автомобилей'
        }
    ]
    
    categories = []
    for cat_data in categories_data:
        category, created = Category.objects.get_or_create(
            slug=cat_data['slug'],
            defaults=cat_data
        )
        categories.append(category)
        if created:
            print(f"Создана категория: {category.name}")
    
    return categories

def create_products(categories):
    # Список названий товаров для каждой категории
    product_names = {
        'Электроника': [
            'Смартфон Samsung Galaxy', 'Ноутбук Dell Inspiron', 'Планшет Apple iPad',
            'Наушники Sony WH-1000XM4', 'Умные часы Apple Watch', 'Телевизор LG OLED',
            'Принтер HP LaserJet', 'Монитор ASUS ProArt', 'Клавиатура Logitech MX',
            'Мышь Razer DeathAdder', 'Веб-камера Logitech C920', 'Микрофон Blue Yeti',
            'Колонки JBL Flip', 'Портативная зарядка Anker', 'Кабель USB-C'
        ],
        'Одежда': [
            'Джинсы Levi\'s 501', 'Футболка Nike Dri-FIT', 'Куртка The North Face',
            'Платье Zara', 'Свитер H&M', 'Брюки Uniqlo', 'Рубашка Tommy Hilfiger',
            'Пальто Mango', 'Шорты Adidas', 'Юбка Massimo Dutti', 'Блузка COS',
            'Кардиган Pull&Bear', 'Джинсовая куртка Wrangler', 'Спортивный костюм Puma',
            'Пальто Zara'
        ],
        'Книги': [
            'Война и мир', 'Преступление и наказание', 'Мастер и Маргарита',
            'Гарри Поттер и философский камень', 'Властелин колец', '1984',
            'Убить пересмешника', 'Великий Гэтсби', 'Тихий Дон', 'Доктор Живаго',
            'Братья Карамазовы', 'Идиот', 'Анна Каренина', 'Евгений Онегин',
            'Герой нашего времени'
        ],
        'Спорт': [
            'Беговая дорожка NordicTrack', 'Гантели 5 кг', 'Коврик для йоги',
            'Велосипед горный', 'Теннисная ракетка Wilson', 'Футбольный мяч Adidas',
            'Скакалка', 'Обруч хулахуп', 'Гиря 16 кг', 'Турник настенный',
            'Боксерская груша', 'Лыжи горные', 'Сноуборд Burton', 'Ролики K2',
            'Самокат детский'
        ],
        'Дом и сад': [
            'Кофемашина DeLonghi', 'Блендер Philips', 'Микроволновка Samsung',
            'Пылесос Dyson', 'Утюг Philips', 'Чайник электрический',
            'Набор кастрюль Tefal', 'Нож кухонный Wusthof', 'Разделочная доска',
            'Ваза для цветов', 'Горшок для растений', 'Садовые ножницы',
            'Лейка садовая', 'Семена томатов', 'Удобрение для цветов'
        ],
        'Красота': [
            'Крем для лица La Roche-Posay', 'Тушь для ресниц Maybelline',
            'Помада MAC', 'Духи Chanel N°5', 'Шампунь Head&Shoulders',
            'Зубная паста Colgate', 'Дезодорант Nivea', 'Крем для рук Neutrogena',
            'Лак для ногтей OPI', 'Расческа Tangle Teezer', 'Зеркало косметическое',
            'Пинцет для бровей', 'Кисть для макияжа', 'Скраб для тела',
            'Маска для лица'
        ],
        'Игрушки': [
            'Конструктор LEGO', 'Кукла Barbie', 'Машинка Hot Wheels',
            'Плюшевый медведь', 'Настольная игра Монополия', 'Пазл 1000 деталей',
            'Робот-трансформер', 'Кубик Рубика', 'Мягкая игрушка котик',
            'Набор для рисования', 'Музыкальный инструмент', 'Кукольный домик',
            'Солдатики', 'Модель самолета', 'Набор для лепки'
        ],
        'Автотовары': [
            'Автомобильный держатель для телефона', 'Авточехлы на сиденья',
            'Автомобильный пылесос', 'Автоосвежитель воздуха', 'Автомобильная зарядка',
            'Автомобильный коврик', 'Автомобильная аптечка', 'Автомобильный компрессор',
            'Автомобильная сигнализация', 'Автомобильный видеорегистратор',
            'Автомобильный GPS навигатор', 'Автомобильный инвертор',
            'Автомобильная подушка', 'Автомобильный органайзер', 'Автомобильная мойка'
        ]
    }
    
    # Описания товаров
    descriptions = [
        'Высокое качество по доступной цене. Отличный выбор для повседневного использования.',
        'Современный дизайн и функциональность. Подходит для активного образа жизни.',
        'Надежный и долговечный товар. Гарантия качества от производителя.',
        'Идеальное сочетание цены и качества. Популярный выбор среди покупателей.',
        'Инновационные технологии и стильный дизайн. Подходит для требовательных пользователей.',
        'Экологически чистые материалы. Безопасно для здоровья и окружающей среды.',
        'Компактные размеры и удобство использования. Отлично подходит для небольших помещений.',
        'Профессиональное качество. Используется специалистами в своей области.',
        'Универсальное решение для различных задач. Высокая производительность.',
        'Эргономичный дизайн для максимального комфорта. Подходит для длительного использования.',
        'Современные технологии и инновационные решения. Лидер в своей категории.',
        'Классический дизайн с современными функциями. Вне времени и моды.',
        'Легкий и удобный в использовании. Отлично подходит для путешествий.',
        'Высокая надежность и долговечность. Инвестиция в качество.',
        'Стильный дизайн и отличная функциональность. Подчеркнет ваш вкус.'
    ]
    
    products_created = 0
    
    for category in categories:
        category_products = product_names.get(category.name, [])
        
        for i, product_name in enumerate(category_products):
            # Создаем уникальный slug с транслитерацией
            base_slug = create_slug(product_name)
            slug = f"{base_slug}-{i+1}"
            
            # Генерируем случайную цену
            price = Decimal(str(random.randint(500, 50000)))
            
            # Генерируем случайный остаток
            stock = random.randint(0, 100)
            
            # Определяем доступность
            available = stock > 0
            
            # Выбираем случайное описание
            description = random.choice(descriptions)
            
            product, created = Product.objects.get_or_create(
                slug=slug,
                defaults={
                    'category': category,
                    'name': product_name,
                    'description': description,
                    'price': price,
                    'stock': stock,
                    'available': available
                }
            )
            
            if created:
                products_created += 1
                print(f"Создан товар: {product.name} - {product.price} ₽")
    
    print(f"\nВсего создано товаров: {products_created}")

if __name__ == '__main__':
    print("Начинаем заполнение базы данных...")
    
    # Создаем категории
    categories = create_categories()
    print(f"Создано категорий: {len(categories)}")
    
    # Создаем товары
    create_products(categories)
    
    print("\nЗаполнение базы данных завершено!") 